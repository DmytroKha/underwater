{
    "swagger": "2.0",
    "info": {
        "description": "API Server for Halo Underwater application.",
        "title": "Halo Underwater API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/group/{groupName}/species": {
            "get": {
                "description": "Get fish species in a group.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get Group Fish Species",
                "operationId": "get-group-fish-species",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group Name of the Sensors",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/resources.FishDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/group/{groupName}/species/top/{N}": {
            "get": {
                "description": "Get top fish species in a group.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get Group Top Fish Species",
                "operationId": "get-group-top-fish-species",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group Name of the Sensors",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Count of top fishes",
                        "name": "N",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "From Date/Time (UNIX Timestamp)",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Till Date/Time (UNIX Timestamp)",
                        "name": "till",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/resources.FishDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/group/{groupName}/temperature/average": {
            "get": {
                "description": "Get the average temperature detected by a particular sensors in a group.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get Group Temperature Average",
                "operationId": "get-group-temperature-average",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group Name of the Sensors",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/group/{groupName}/transparency/average": {
            "get": {
                "description": "Get the average transparency detected by sensors in a group.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get Group Transparency Average",
                "operationId": "get-group-transparency-average",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group Name of the Sensors",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "This endpoint can be used as health check for this application.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/region/temperature/min": {
            "get": {
                "description": "Get the minimum temperature detected by sensors in the region.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get Region Min Temperature",
                "operationId": "get-region-min-temperature",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Min X",
                        "name": "xMin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Max X",
                        "name": "xMax",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Min Y",
                        "name": "yMin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Max Y",
                        "name": "yMax",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Min Z",
                        "name": "zMin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Max Z",
                        "name": "zMax",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sensor/{codeName}/temperature/average": {
            "get": {
                "description": "Get the average temperature detected by a particular sensor between specified date/time pairs.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get Sensor Temperature Average",
                "operationId": "get-sensor-temperature-average",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code Name of the Sensor",
                        "name": "codeName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "From Date/Time (UNIX Timestamp)",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Till Date/Time (UNIX Timestamp)",
                        "name": "till",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "resources.FishDto": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}